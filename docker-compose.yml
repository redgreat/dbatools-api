version: '3.8'

services:
  # FastAPI 应用
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://dbatools:password123@postgres:5432/dbatools
      - SECRET_KEY=your-super-secret-key-change-in-production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - APP_NAME=DBA Tools API
      - APP_VERSION=1.0.0
      - DEBUG=true
      - HOST=0.0.0.0
      - PORT=8000
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
    restart: unless-stopped
    networks:
      - dbatools-network

  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=dbatools
      - POSTGRES_USER=dbatools
      - POSTGRES_PASSWORD=password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dbatools -d dbatools"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - dbatools-network

  # Redis (可选，用于缓存和会话存储)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - dbatools-network

  # Nginx 反向代理 (生产环境)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - dbatools-network
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:

networks:
  dbatools-network:
    driver: bridge